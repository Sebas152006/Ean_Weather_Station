// Iconos de clima
    const weatherIcons = {
      0: "‚òÄÔ∏è", 1: "üå§Ô∏è", 2: "‚õÖ", 3: "‚òÅÔ∏è",
      45: "üå´Ô∏è", 48: "üå´Ô∏è",
      51: "üå¶Ô∏è", 53: "üå¶Ô∏è", 55: "üå¶Ô∏è",
      61: "üåßÔ∏è", 63: "üåßÔ∏è", 65: "üåßÔ∏è",
      71: "üå®Ô∏è", 73: "üå®Ô∏è", 75: "üå®Ô∏è",
      80: "üåßÔ∏è", 81: "üåßÔ∏è", 82: "üåßÔ∏è",
      95: "‚õàÔ∏è", 96: "‚õàÔ∏è", 99: "‚õàÔ∏è"
    };

    // Conversi√≥n de temperaturas
    let unidadSeleccionada = "C";
    function convertirTemperatura(valorC, unidad) {
      switch (unidad) {
        case "K": return valorC + 273.15;
        case "F": return (valorC * 9) / 5 + 32;
        case "R": return (valorC + 273.15) * 9/5;
        case "Re": return valorC * 0.8;
        default: return valorC;
      }
    }
    function simboloUnidad(u) {
      return { C:"¬∞C", K:"K", F:"¬∞F", R:"¬∞R", Re:"¬∞Re" }[u] || "¬∞C";
    }

    function abrirSettings() {
      document.getElementById("settingsModal").style.display = "flex";
    }
    function cerrarSettings() {
      document.getElementById("settingsModal").style.display = "none";
    }
    function cambiarUnidad() {
      unidadSeleccionada = document.getElementById("unidad").value;
    }

    // Crear mapa
    const map = L.map("map").setView([20, 0], 2);

    // Capa de tiles
    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      attribution: '&copy; OpenStreetMap contributors',
      minZoom: 2,
      maxZoom: 8
    }).addTo(map);

    // Evento click
    map.on("click", async (e) => {
      const { lat, lng } = e.latlng;

      try {
        const url = `https://api.open-meteo.com/v1/forecast?latitude=${lat}&longitude=${lng}&current_weather=true&timezone=auto`;
        const res = await fetch(url);
        const data = await res.json();

        if (!data.current_weather) {
          L.popup()
            .setLatLng(e.latlng)
            .setContent("<div class='weather-popup'>‚ö†Ô∏è No hay datos clim√°ticos</div>")
            .openOn(map);
          return;
        }

        const weather = data.current_weather;
        const icon = weatherIcons[weather.weathercode] || "‚ùì";
        const temp = convertirTemperatura(weather.temperature, unidadSeleccionada).toFixed(1);
        const simbolo = simboloUnidad(unidadSeleccionada);

        const popupHtml = `
          <div class="weather-popup">
            <h4>üìç Lat: ${lat.toFixed(2)}, Lng: ${lng.toFixed(2)}</h4>
            <p>${icon} ${temp}${simbolo}</p>
            <p>üí® Viento: ${weather.windspeed} km/h</p>
            <p>üïí Hora: ${weather.time.replace("T", " ")}</p>
          </div>
        `;
        L.popup()
          .setLatLng(e.latlng)
          .setContent(popupHtml)
          .openOn(map);
      } catch (err) {
        console.error(err);
        L.popup()
          .setLatLng(e.latlng)
          .setContent("<div class='weather-popup'>‚ö†Ô∏è Error al obtener datos</div>")
          .openOn(map);
      }
    });